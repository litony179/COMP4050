[{"/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/index.js":"1","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/reportWebVitals.js":"2","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/App.js":"3","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/serviceWorker.js":"4","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/dataRouter.js":"5","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/HeadingBar.js":"6","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/homePage/homePage.js":"7","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/user/Login.js":"8","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/user/Register.js":"9","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/dashboard/dashboard.js":"10","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/jobPage/jobPage.js":"11","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/auth/PrivateRoute.js":"12","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/userProfile/userProfile.js":"13","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/auth/index.js":"14","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/userProfile/changeInfo.jsx":"15","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/dataFill/dataFillPage.jsx":"16","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/Layout.js":"17","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/dashboard/activeListings.js":"18","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/dashboard/history.js":"19","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/dashboard/currentJobs.js":"20","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/dashboard/info.js":"21","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/config.js":"22","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/Footer.js":"23"},{"size":576,"mtime":1627501264348,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1627472120553,"results":"26","hashOfConfig":"25"},{"size":272,"mtime":1627511013393,"results":"27","hashOfConfig":"25"},{"size":5086,"mtime":1604301095000,"results":"28","hashOfConfig":"25"},{"size":3240,"mtime":1627476662033,"results":"29","hashOfConfig":"25"},{"size":2029,"mtime":1627506264321,"results":"30","hashOfConfig":"25"},{"size":2409,"mtime":1627477067825,"results":"31","hashOfConfig":"25"},{"size":2689,"mtime":1627504516740,"results":"32","hashOfConfig":"25"},{"size":3357,"mtime":1627504531681,"results":"33","hashOfConfig":"25"},{"size":2291,"mtime":1627476742028,"results":"34","hashOfConfig":"25"},{"size":12415,"mtime":1627477520611,"results":"35","hashOfConfig":"25"},{"size":598,"mtime":1627476493353,"results":"36","hashOfConfig":"25"},{"size":3331,"mtime":1627477570844,"results":"37","hashOfConfig":"25"},{"size":1731,"mtime":1604301095000,"results":"38","hashOfConfig":"25"},{"size":1390,"mtime":1627475656489,"results":"39","hashOfConfig":"25"},{"size":5186,"mtime":1627504334119,"results":"40","hashOfConfig":"25"},{"size":429,"mtime":1604301095000,"results":"41","hashOfConfig":"25"},{"size":1673,"mtime":1627476531944,"results":"42","hashOfConfig":"25"},{"size":1351,"mtime":1627476200786,"results":"43","hashOfConfig":"25"},{"size":1374,"mtime":1627476226667,"results":"44","hashOfConfig":"25"},{"size":1743,"mtime":1627477105322,"results":"45","hashOfConfig":"25"},{"size":44,"mtime":1604301095000,"results":"46","hashOfConfig":"25"},{"size":285,"mtime":1627521224272,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b410d6",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/index.js",[],"/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/reportWebVitals.js",[],"/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/App.js",[],"/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/serviceWorker.js",[],["104","105"],"/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/dataRouter.js",["106","107","108","109"],"import React, { Component } from 'react';\nimport {\n    BrowserRouter,\n    Switch,\n    Route\n  } from \"react-router-dom\"; \n\nimport UserProfile from \"./userProfile/userProfile\";\nimport Header from \"./HeadingBar\";\nimport ChangeInfo from \"./userProfile/changeInfo\";\nimport HomePage from \"./homePage/homePage\"\nimport Dashboard from \"./dashboard/dashboard\"\nimport JobPage from \"./jobPage/jobPage\"\nimport JobDataFill from \"./dataFill/dataFillPage\"\nimport Register from '../user/Register';\nimport Login from '../user/Login';\nimport PrivateRoute from '../auth/PrivateRoute'\nimport { isAuthenticated } from \"../auth/index\";\n\n\nclass dataRouter extends Component {\n\n    constructor(props) {\n        super(props);\n        if(isAuthenticated()){\n            const {\n                user: { _id, name, email, address, balance, about, role }\n              } = isAuthenticated();\n            this.state = {\n              location: null,\n              userID: _id,\n              name: name,\n              balance: balance,\n              jobs: []\n            };\n        } else {\n            this.state = {\n                location: null,\n                userID: null,\n                name: null,\n                balance: null,\n                jobs: []\n              };\n        }\n        \n\n    \n    }\n\n    componentDidMount(){\n        this.updateJobs()\n    }\n\n    updateJobs(){\n        fetch('http://localhost:3200/jobs?fetch=true')\n            .then( resp => resp.json())\n            .then((data)=> {\n                this.setState({\n                    jobs: data\n                })\n        })\n    }\n\n\n    handleSelect(e) {\n        console.log(e);\n        this.setState({location : e})\n    }\n\n    /* */\n\n    render() {\n        return (\n            <BrowserRouter>\n                <Header userID={this.state.userID} name={this.state.name} balance={this.state.balance}/>\n                <div className=\"app\"> \n                    <Switch>\n                        <Route path=\"/changeinfo\">\n                            <ChangeInfo/>\n                        </Route>\n\n                        <Route path=\"/datafill\">\n                            <JobDataFill/>\n                        </Route>\n\n                        <Route path='/login' exact component={Login}/>\n                        <Route path='/register' exact component={Register}/>\n                        <PrivateRoute component={UserProfile} path=\"/profile\" exact />\n\n\n                        <Route exact path = \"/add\" render={(props) => <JobDataFill {...props} userID={this.state.userID}/> }/>\n\n                        <Route exact path = \"/edit\" render={(props) => <JobDataFill {...props} userID={this.state.userID}/> }/>\n\n                        <PrivateRoute component={Dashboard} path=\"/dashboard\" jobs={this.state.jobs} userID={this.state.userID} exact />\n                    \n\n                        <Route exact path = \"/job\" render={(props) => <JobPage {...props} userID={this.state.userID}/> }/>\n\n                        <Route path=\"/\">\n                            <HomePage jobs={this.state.jobs} userID={this.state.userID}/>\n                        </Route>\n                    </Switch>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default dataRouter;","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/HeadingBar.js",[],"/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/homePage/homePage.js",["110","111","112","113"],"import React, { Component , useState} from '../../../node_modules/react';\nimport {Link} from \"react-router-dom\";\nimport './homePage.css';\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap/dist/js/bootstrap.bundle'\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchResults : this.props.jobs\n    };\n\n  }\n\n  handleSelect (e) {\n    this.setState({location : e})\n  }\n\n  searchData = e => {\n    const queryResult = e.target.value;\n\n    if(e === \"\"){\n        this.state = {\n          searchResults : this.props.jobs\n        };\n        return;\n    }\n\n    let data = []\n\n    this.props.jobs.forEach(e => {\n        if(e.description.toLowerCase().search(queryResult.toLowerCase()) !== -1 \n        || e.title.toLowerCase().search(queryResult.toLowerCase()) !== -1\n        || e.location.toLowerCase().search(queryResult.toLowerCase()) !== -1){\n            data.push(e);\n        }\n    });\n\n    this.setState({ searchQuery: e.target.value, searchResults: data })\n  }\n  \n  handleSubmit = e => {\n    e.preventDefault()\n  }\n  \n  render() {\n    if(this.state.searchResults.length === 0){\n      this.state = {\n        searchResults : this.props.jobs\n      };\n    }\n \n    let jobList = this.state.searchResults.map(job => {\n      return (job.userID != this.props.userID && job.jobStatus !== 4 &&\n        <Link className=\"job\" to={{pathname: \"/job\", state: {job: job, prevLocation : \"/\"}}}>\n        <div className=\"homeCard border-dark mb-3\">\n          <div className=\"homeCardBody text-dark\">\n              <h5 className=\"card-title\">{job.title}</h5>\n              <p className=\"card-text\">{job.description}</p>\n          </div>\n          <div className=\"card-footer bg-transparent border-dark\">\n            <p className=\"homeJobLocation\">Location: {job.location}</p>\n            <p className=\"homeJobCost\">Cost: {job.price}</p>\n          </div>\n        </div>\n        </Link>\n      );\n    })\n    \n    return (\n      <div className= \"homePage\">\n        \n        <form className=\"form-inline\">\n          <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"\n            id=\"Search\"\n            onChange={this.searchData}\n          />\n        </form>\n      <div className=\"homeContainer\">\n        <div className=\"row\">\n            {jobList}\n        </div>\n      </div>\n      </div>\n\n    )\n  }\n\n}\n\nexport default HomePage;","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/user/Login.js",[],"/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/user/Register.js",[],"/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/dashboard/dashboard.js",["114"],"import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './dashboard.css';\n\nimport ActiveListings from './activeListings';\nimport CurrentJobs from './currentJobs';\nimport History from './history';\nimport Info from './info';\n//import Datafill from '../dataFill/dataFillPage';\n//import { isAuthenticated } from \"../../auth/index\";\n\n\nclass dashboard extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    \n\n    render() {\n        /* Get user info if authenticated\n        const {\n            user: { _id, name, email, address, balance, role }\n        } = isAuthenticated();\n        */\n\n        var uID = this.props.userID\n\n        var myJobs = this.props.jobs\n        myJobs = this.props.jobs.filter(function (job) {\n           return job.chosenUserID === uID && job.jobStatus !== 4;\n        });\n\n        var activeJobs = this.props.jobs\n        activeJobs = this.props.jobs.filter(function (job) {\n            return job.userID === uID && job.jobStatus !== 4;\n        });\n\n        var pastJobs = this.props.jobs\n        pastJobs = this.props.jobs.filter(function (job) {\n            return (job.userID === uID || job.chosenUserID === uID) && job.jobStatus === 4;\n        });\n\n\n        \n\n        return (\n            <div>\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-\">\n                            \n                        </div>\n                        <div class=\"col-lg\">\n                            <Link to={{pathname: \"/add\", state: {prevLocation : \"/dashboard\"}}}><button className=\"btn btn-success btn-lg active\">Create A New Job</button></Link>\n                            <Info uID = {this.props.userID}/>\n                            <CurrentJobs jobs={myJobs} userID={this.props.userID}/>\n                            <ActiveListings jobs={activeJobs} userID={this.props.userID}/>\n                            <History jobs={pastJobs} userID={this.props.userID}/>\n                        </div>\n                        <div class=\"col-\">\n                            \n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default dashboard;\n","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/jobPage/jobPage.js",["115","116","117"],"import React, { Component} from '../../../node_modules/react';\nimport './jobPage.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { isAuthenticated } from \"../../auth/index\";\n\nimport {  Link } from \"react-router-dom\";\n\nclass Job extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        userID: this.props.userID,\n        job: this.props.location.state.job\n    }\n  }\n\napplyForJob(event) {\n    event.preventDefault();\n    //this.updateVariables();\n\n    var job = this.state.job\n    job.jobStatus = 2;\n    job.chosenUserID = this.state.userID;\n\n    let url = new URL(\"http://localhost:3200/jobs?replace=true\")\n\n    url.searchParams.set(\"replaceID\", job._id)\n    url.searchParams.set(\"userID\", job.userID)\n    url.searchParams.set(\"jobStatus\", 2)\n    url.searchParams.set(\"chosenUserID\", job.chosenUserID)\n    url.searchParams.set(\"title\", job.title)\n    url.searchParams.set(\"description\", job.desc)\n    url.searchParams.set(\"price\", job.price)\n    url.searchParams.set(\"location\", job.location)\n\n    fetch(url.href).then(() =>\n    {\n        fetch('http://localhost:3200/jobs?fetch=true&_id=' + job._id)\n        .then( resp => resp.json())\n        .then((data)=> {\n                this.setState({\n                    job: data\n                })\n        })\n    }\n)\n}\n\nacceptChosenUser(event) {\n    event.preventDefault();\n    //this.updateVariables();\n\n    var job = this.state.job\n    job.jobStatus = 3;\n\n    let url = new URL(\"http://localhost:3200/jobs?replace=true\")\n\n    url.searchParams.set(\"replaceID\", job._id)\n    url.searchParams.set(\"userID\", job.userID)\n    url.searchParams.set(\"jobStatus\", 3)\n    url.searchParams.set(\"chosenUserID\", job.chosenUserID)\n    url.searchParams.set(\"title\", job.title)\n    url.searchParams.set(\"description\", job.desc)\n    url.searchParams.set(\"price\", job.price)\n    url.searchParams.set(\"location\", job.location)\n\n    fetch(url.href).then(() =>\n    {\n        fetch('http://localhost:3200/jobs?fetch=true&_id=' + job._id)\n        .then( resp => resp.json())\n        .then((data)=> {\n                this.setState({\n                    job: data\n                })\n        })\n    }\n)\n}\n\ndeclineChosenUser(event) {\n    event.preventDefault();\n    //this.updateVariables();\n\n    var job = this.state.job\n    job.jobStatus = 1;\n    job.chosenUserID = \" \";\n\n    let url = new URL(\"http://localhost:3200/jobs?replace=true\")\n\n    url.searchParams.set(\"replaceID\", job._id)\n    url.searchParams.set(\"userID\", job.userID)\n    url.searchParams.set(\"jobStatus\", 1)\n    url.searchParams.set(\"chosenUserID\", job.chosenUserID)\n    url.searchParams.set(\"title\", job.title)\n    url.searchParams.set(\"description\", job.desc)\n    url.searchParams.set(\"price\", job.price)\n    url.searchParams.set(\"location\", job.location)\n\n    fetch(url.href).then(() =>\n    {\n        fetch('http://localhost:3200/jobs?fetch=true&_id=' + job._id)\n        .then( resp => resp.json())\n        .then((data)=> {\n                this.setState({\n                    job: data\n                })\n        })\n    }\n)\n}\n\nmarkAsCompleted(event) {\n    event.preventDefault();\n    //this.updateVariables();\n    //http://localhost:3200/rating?rating=true&userID=5f728f406d252648c48c303e&chosenUserID=5f728f406d252648c48c303e&jobID=5f728f406d252648c48c303e&rating=-1\n\n    var job = this.state.job\n    job.jobStatus = 4;\n\n    let url = new URL(\"http://localhost:3200/jobs?replace=true\")\n\n    url.searchParams.set(\"replaceID\", job._id)\n    url.searchParams.set(\"userID\", job.userID)\n    url.searchParams.set(\"jobStatus\", 4)\n    url.searchParams.set(\"chosenUserID\", job.chosenUserID)\n    url.searchParams.set(\"title\", job.title)\n    url.searchParams.set(\"description\", job.desc)\n    url.searchParams.set(\"price\", job.price)\n    url.searchParams.set(\"location\", job.location)\n\n    fetch(url.href).then(() =>\n    {\n        fetch('http://localhost:3200/jobs?fetch=true&_id=' + job._id)\n        .then( resp => resp.json())\n        .then((data)=> {\n                this.setState({\n                    job: data\n                })\n\n                url = new URL(\"http://localhost:3200/rating?add=true\")\n\n                url.searchParams.set(\"userID\", job.userID)\n                url.searchParams.set(\"chosenUserID\", job.chosenUserID)\n                url.searchParams.set(\"jobID\", job._id)\n                url.searchParams.set(\"rating\", 1)\n            \n                fetch(url.href).then(() =>\n                {\n                    fetch('http://localhost:3200/jobs?fetch=true&_id=' + job._id)\n                    .then( resp => resp.json())\n                    .then((data)=> {\n                            this.setState({\n                                job: data\n                            })\n                    })\n                })\n        })\n    })\n\n\n}\n\n    componentDidMount() {\n        fetch('http://localhost:3200/users?fetch=true&_id=' + this.props.location.state.job.userID)\n            .then( resp => resp.json())\n            .then((data)=> {\n                this.setState({name : data[0].name})\n        })\n\n        fetch('http://localhost:3200/rating?total=true&chosenUserID=' + this.props.location.state.job.userID)\n        .then( resp => resp.json())\n        .then((data)=> {\n            this.setState({rating : data.total})\n        })\n\n        fetch('http://localhost:3200/users?fetch=true&_id=' + this.props.location.state.job.chosenUserID)\n        .then( resp => resp.json())\n        .then((data)=> {\n            this.setState({chosenName : data[0].name,\n            chosenEmail: data[0].email,\n            chosenPicture: data[0].picture})\n        })\n\n        fetch('http://localhost:3200/rating?total=true&chosenUserID=' + this.props.location.state.job.chosenUserID)\n        .then( resp => resp.json())\n        .then((data)=> {\n            this.setState({chosenRating : data.total})\n        })\n    }\n\n\n  \n  \n  render() {\n      const job = this.props.location.state.job\n      const seller = job.seller\n      return (\n            <div className=\"container\">\n                <div className=\"card\">\n                    <div class=\"row no-gutters\">\n                        <div className=\"col-md-4\">\n                            <img className=\"jobImage card-img-top\"\n                                src={\"https://picsum.photos/seed/\" + this.state.job._id + \"/400/400\"} />\n                        </div>\n\n                        <div className=\"col-md-8\">\n                            <div className=\"card-body\">\n                                <div className=\"descriptionContainer\">\n                                    <div>\n                                        <h3 className=\"card-title\">\n                                            {job.title}\n                                        </h3>\n                                        <h6 className=\"card-subtitle mb-2 text-muted\">\n                                            Location: {job.location}\n                                        </h6>\n                                        <h6 className=\"card-subtitle mb-2 text-muted\">\n                                            Value: {job.price}\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"userCoinsIcon\" fill=\"#17a2b8\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path fill-rule=\"evenodd\" d=\"M8 16a6 6 0 0 0 6-6c0-1.655-1.122-2.904-2.432-4.362C10.254 4.176 8.75 2.503 8 0c0 0-6 5.686-6 10a6 6 0 0 0 6 6zM6.646 4.646c-.376.377-1.272 1.489-2.093 3.13l.894.448c.78-1.559 1.616-2.58 1.907-2.87l-.708-.708z\"/>\n                                            </svg>\n                                        </h6>\n                                        <p className=\"card-text\">\n                                            {job.description}\n                                        </p>\n                                        <p className=\"card-text\">\n                                            Job Status: {job.jobStatus === 1 && \"Listed Job\"}\n                                            {job.jobStatus === 2 && \"Applied\"}\n                                            {job.jobStatus === 3 && \"Active\"}\n                                            {job.jobStatus === 4 && \"Completed\"}\n                                        </p>\n                                        <div className=\"sellerDetails\">\n                                            <h6 className=\"sellerName text-muted\">{\"Listing by: \"+ this.state.name}</h6>\n                                            <div className=\"ratingContainer\">\n                                                <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 16 16\" class=\"bi bi-star-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/>\n                                                </svg>\n                                                <h6 className=\"sellerRating text-muted\"> {this.state.rating}</h6>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div class=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n\n                    <Link to={this.props.location.state.prevLocation}>\n                        <button className=\"btn btn-danger btn-lg active\">\n                            Go Back\n                        </button>\n                    </Link>\n\n                    {job.userID === this.state.userID && job.jobStatus !== 3 && job.jobStatus !== 4 && <Link to={{pathname: \"/edit\", state: {job: job}}}>\n                        <button className=\"btn btn-primary btn-lg active\">\n                            Edit\n                        </button>\n                    </Link>}\n                    \n                    {job.jobStatus === 1 && isAuthenticated() && job.userID !== this.state.userID && <Link onClick={e => {this.applyForJob(e)}}>\n                        <button className=\"btn btn-primary btn-lg active\">\n                            Apply for Job\n                        </button>\n                    </Link>}\n\n                    {job.jobStatus === 3 && job.userID === this.state.userID && <Link onClick={e => {this.markAsCompleted(e)}}>\n                        <button className=\"btn btn-success btn-lg active\">\n                            Completed\n                        </button>\n                    </Link>}\n\n                </div>\n                \n                \n                <div class=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n\n\n                {job.jobStatus === 2 && job.userID === this.state.userID && this.state.chosenName !== null &&\n                <div class=\"card border-dark mb-3 dash-card\">\n                        <div class=\"card-body text-dark dash-card-body\">\n                            <h5 class=\"card-title\">{this.state.chosenName} Has Applied for this Job</h5>\n                            <p class=\"card-text\">Email: {this.state.chosenEmail}</p>\n                            <p class=\"card-text\">Rating: {this.state.chosenRating}</p>\n                            <img className=\"chosenImage card-img-top\" src={this.state.chosenPicture} />\n                        </div>\n                        <div class=\"card-footer bg-transparent border-dark\">\n\n                        <Link onClick={e => {this.acceptChosenUser(e)}}>\n                            <button className=\"btn btn-success btn-lg active\">\n                                Accept\n                            </button>\n                        </Link>\n\n                        <Link onClick={e => {this.declineChosenUser(e)}}>\n                            <button className=\"btn btn-danger btn-lg active\">\n                                Decline\n                            </button>\n                        </Link>\n                            \n                        </div>\n                    </div>\n                }\n                </div>\n                </div>\n\n                \n        </div>  \n    )}\n}\n\nexport default Job;","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/auth/PrivateRoute.js",[],"/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/userProfile/userProfile.js",["118","119","120","121"],"\nimport React, { Component } from 'react';\nimport './userProfile.css';\n// @ts-ignore\n//import profilePic from '../../resources/userProfile/default-user.jpg'\nimport \"./sideBar.css\"\nimport './sideBarNav.css'\nimport \"./userInfo.css\"\nimport {  Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { isAuthenticated } from \"../../auth/index\";\n\n\n\nconst Profile = () => {\n  const {\n    user: { _id, name, email, address, balance, about, role }\n  } = isAuthenticated();\n\n  let rating = 0;\n  \n  fetch('http://localhost:3200/rating?total=true&chosenUserID=' + _id)\n  .then( resp => resp.json())\n  .then((data)=> {\n     rating = data.total\n  })\n\n\n  return (\n      <div className=\"Profile-page\">\n\n        <div className=\"sidebar\">\n            <div className=\"card-body\">\n                <div className=\"sidebarnav\">\n                    <Link to='/'>\n                        <h2 className=\"titles\">Search for Jobs</h2>\n                    </Link>\n                </div>\n                <div className=\"sidebarnav\">\n                    <Link to='/changeinfo'>\n                        <h2 className=\"titles\">Change Personal Information</h2>\n                    </Link>\n                </div>\n        \n                <div className=\"sidebarnav\">\n                    <Link to='/dashboard'>\n                        <h2 className=\"titles\">Dashboard</h2>\n                    </Link>\n                </div>\n            </div>\n        </div>\n\n\n        <div className=\"userinfo\">\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">Hello {name},</h5>\n                    <p className=\"card-text\">View or change your information.</p>\n                </div>\n            </div>\n\n            <div className=\"card-group\">\n                <div className=\"card\">\n                    <div className=\"card-header\">\n                        Account Information\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                            <div className=\"card-body\">\n                                <blockquote className=\"blockquote mb-0\">\n                                    <h5>Contact Information</h5>\n                                    <p>{name}</p>\n                                    <p>{email}</p>\n                                </blockquote>\n                            </div>\n                        </div>  \n                        <div className=\"col-sm-6\">\n                            <div className=\"card-body\">\n                                <blockquote className=\"blockquote mb-0\">\n                                    <h5>Address</h5>\n                                    <p>{address}</p>\n                                </blockquote>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class='card'>\n                <div class=\"card-body\">\n                    <h5 clas=\"card-title\">Your Balance</h5>\n                </div>\n                <blockquote className=\"blockquote balance\">\n                    <h5>${balance}</h5>\n                </blockquote>\n\n            </div>\n\n            \n\n         \n\n        </div>\n        \n\n\n\n        </div>\n  )\n}\n\nexport default Profile;","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/auth/index.js",[],"/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/userProfile/changeInfo.jsx",[],"/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/dataFill/dataFillPage.jsx",["122"],"import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {Link} from \"react-router-dom\";\nimport { v4 as uuidv4 } from 'uuid';\n\nclass jobDataFill extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: this.props.location.pathname\n        }\n        \n    }\n\n    componentDidMount(){\n        this.state.type === \"/edit\" ? this.updateVariables() : this.newJob()\n    }\n\n\n    // let price = req.query.price;\n    // let location = req.query.location;\n\n    submitData(event) {\n\n        console.log(this.jobStatus.value);\n\n        event.preventDefault();\n\n        let url = new URL(\"http://localhost:3200/jobs?\" + (this.state.type === \"/edit\" ? \"replace\" : \"add\") + \"=true\")\n        if(this.state.type === \"/edit\"){\n            url.searchParams.set(\"replaceID\", this.replaceID)\n        }\n        url.searchParams.set(\"userID\", this.props.userID)\n        url.searchParams.set(\"jobStatus\", this.jobStatus.value)\n        url.searchParams.set(\"chosenUserID\", this.chosenUserID.value ? this.chosenUserID.value : \"null\")\n        url.searchParams.set(\"title\", this.title.value)\n        url.searchParams.set(\"description\", this.desc.value)\n        url.searchParams.set(\"price\", this.price.value)\n        url.searchParams.set(\"location\", this.location.value)\n\n        fetch(url.href).then(() =>\n            {\n                fetch('http://localhost:3200/jobs?fetch=true&userID=' + this.props.userID)\n                .then( resp => resp.json())\n                .then((data)=> {\n                        this.setState({\n                            jobs: data\n                        })\n                })\n            }\n        )\n    }\n\n    newJob(){\n        this.jobStatus = 1\n        this.chosenUserID = \"\"\n    }\n\n    updateVariables(){\n        var job = this.props.location.state.job;\n        this.replaceID = job._id;\n        this.jobStatus.value = job.jobStatus;\n        this.chosenUserID.value = job.chosenUserID;\n        this.title.value = job.title;\n        this.desc.value = job.description;\n        this.price.value = job.price;\n        this.location.value = job.location;\n    }\n\n\n    /*\n\n                    {this.props.location.pathname == \"/edit\" && <div className=\"form-group\">\n                        <label>Edit The Job</label>\n                        <input type=\"text\" className=\"form-control\" id=\"inputType\" ref={this.inputType = \"Edit\"} placeholder=\"Enter User ID\" disabled value=\"\"/>\n                    </div>}\n                    */\n\n    render() {\n        return (\n            <div style={{margin : \"10px\"}}>\n\n                <form onSubmit={a => this.submitData(a)}>\n\n                    <div className=\"form-group\">\n                        <label>Title</label>\n                        <input type=\"text\" className=\"form-control\" id=\"titleInput\" ref={(input) => this.title = input} placeholder=\"Enter Title\"/>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Description</label>\n                        <input type=\"text\" className=\"form-control\" id=\"descInput\" ref={(input) => this.desc = input} placeholder=\"Enter Description\"/>\n                    </div>                   \n\n                    <div className=\"form-group\">\n                        <label>Job Price</label>\n                        <input type=\"number\" className=\"form-control\" id=\"priceInput\" placeholder=\"Enter Price\" ref={(input) => this.price = input}/>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Location</label>\n                        <input type=\"text\" className=\"form-control\" id=\"locationInput\" placeholder=\"Enter Location\" ref={(input) => this.location = input}/>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>jobStatus</label>\n                        <select className=\"form-control form-control-sm\" id=\"jobStatusInput\" ref={(input) => this.jobStatus = input}>\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                        </select>\n                    </div>\n                    {this.state.type === \"/edit\" && (\n                        <div className=\"form-group\">\n                            <label>chosenUserID</label>\n                            <input type=\"text\" className=\"form-control\" id=\"jobChosenUserIDInput\" ref={(input) => this.chosenUserID = input} placeholder=\"Enter User ID\"/>\n                        </div>)\n                    }\n\n                    <span> \n                        <button type=\"submit\" className=\"btn btn-primary btn-lg active\">{this.state.type === \"/edit\" ? \"Apply\" : \"Create\"}</button>\n                        <Link to=\"/dashboard\">\n                            <button className=\"btn btn-danger btn-lg active\">\n                                Cancel\n                            </button>\n                        </Link>\n                    </span>\n\n                </form>\n\n            </div>\n        );\n    }\n}\n\nexport default jobDataFill;","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/Layout.js",[],"/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/dashboard/activeListings.js",["123"],"import 'bootstrap/dist/css/bootstrap.css';\nimport React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass activeListings extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let jobList = this.props.jobs.map(job => {    \n            return (\n                <Link className=\"job\" to={{pathname: \"/job\", state: {job: job, prevLocation : \"/dashboard\"}}}>\n                    <div class=\"card border-dark mb-3 dash-card\">\n                        <div class=\"card-body text-dark dash-card-body\">\n                            <h5 class=\"card-title\">{job.title}</h5>\n                            <p class=\"card-text\">{job.description}</p>\n                        </div>\n                        <div class=\"card-footer bg-transparent border-dark\">\n                            <p className=\"jobLocation\">Location: {job.location}</p>\n                            <p className=\"jobPrice\">Cost: {job.price}</p>\n                            \n                            {job.jobStatus === 2 &&\n                                <button className=\"btn btn-secondary btn-lg active\">\n                                    Someone Has Applied for this Job\n                                </button>\n                            }\n                        </div>\n                    </div>\n                </Link>\n            );\n        })\n        return (\n            <div className=\"container\">\n                <h3 className=\"text-left py-3\">Your Active Listings</h3>\n                <div className=\"row\">\n                    {jobList}\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default activeListings;\n","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/dashboard/history.js",["124"],"import 'bootstrap/dist/css/bootstrap.css';\nimport React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass history extends Component {\n    \n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let jobList = this.props.jobs.map(job => {    \n            return (\n                <Link className=\"job\" to={{pathname: \"/job\", state: {job: job, prevLocation : \"/dashboard\"}}}>\n                    <div class=\"card border-dark mb-3 dash-card\">\n                        <div class=\"card-body text-dark dash-card-body\">\n                            <h5 class=\"card-title\">{job.title}</h5>\n                            <p class=\"card-text\">{job.description}</p>\n                        </div>\n                        <div class=\"card-footer bg-transparent border-dark\">\n                            <p className=\"jobLocation\">Location: {job.location}</p>\n                            <p className=\"jobPrice\">Cost: {job.price}</p>\n                        </div>\n                    </div> \n                </Link>\n            );\n        })\n        return (\n            <div className=\"container\">\n                <h3 className=\"text-left py-3 \">Your Past Jobs</h3>\n                <div className=\"row\">\n                    {jobList}\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default history;","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/dashboard/currentJobs.js",["125"],"import 'bootstrap/dist/css/bootstrap.css';\nimport React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass currentJobs extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let jobList = this.props.jobs.map(job => {    \n            return (\n                <Link className=\"job\" to={{pathname: \"/job\", state: {job: job, prevLocation : \"/dashboard\"}}}>\n                    <div class=\"card border-dark mb-3 dash-card\">\n                        <div class=\"card-body text-dark dash-card-body\">\n                            <h5 class=\"card-title\">{job.title}</h5>\n                            <p class=\"card-text\">{job.description}</p>\n                        </div>\n                        <div class=\"card-footer bg-transparent border-dark\">\n                            <p className=\"jobLocation\">Location: {job.location}</p>\n                            <p className=\"jobPrice\">Cost: {job.price}</p>\n                        </div>\n                    </div> \n                </Link>\n            );\n        })\n        return (\n            <div className=\"container\">\n                <h3 className=\"text-left py-3\">Your Current Jobs</h3>\n                <div className=\"row\">\n                    {jobList}\n                </div>\n            </div>\n        )\n    }\n}\n                \nexport default currentJobs;\n\n","/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/dashboard/info.js",[],"/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/config.js",[],"/Users/kate/Documents/Comp4050-S2-20221/skel2/swapstreet/src/components/Footer.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":27,"column":36,"nodeType":"132","messageId":"133","endLine":27,"endColumn":41},{"ruleId":"130","severity":1,"message":"134","line":27,"column":43,"nodeType":"132","messageId":"133","endLine":27,"endColumn":50},{"ruleId":"130","severity":1,"message":"135","line":27,"column":61,"nodeType":"132","messageId":"133","endLine":27,"endColumn":66},{"ruleId":"130","severity":1,"message":"136","line":27,"column":68,"nodeType":"132","messageId":"133","endLine":27,"endColumn":72},{"ruleId":"130","severity":1,"message":"137","line":1,"column":29,"nodeType":"132","messageId":"133","endLine":1,"endColumn":37},{"ruleId":"138","severity":1,"message":"139","line":26,"column":9,"nodeType":"140","endLine":26,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":51,"column":7,"nodeType":"140","endLine":51,"endColumn":11},{"ruleId":"141","severity":1,"message":"142","line":57,"column":26,"nodeType":"143","messageId":"144","endLine":57,"endColumn":28},{"ruleId":"145","severity":1,"message":"146","line":15,"column":5,"nodeType":"147","messageId":"148","endLine":17,"endColumn":6},{"ruleId":"130","severity":1,"message":"149","line":196,"column":13,"nodeType":"132","messageId":"133","endLine":196,"endColumn":19},{"ruleId":"150","severity":1,"message":"151","line":202,"column":29,"nodeType":"152","endLine":203,"endColumn":105},{"ruleId":"150","severity":1,"message":"151","line":286,"column":29,"nodeType":"152","endLine":286,"endColumn":104},{"ruleId":"130","severity":1,"message":"153","line":2,"column":17,"nodeType":"132","messageId":"133","endLine":2,"endColumn":26},{"ruleId":"130","severity":1,"message":"135","line":17,"column":49,"nodeType":"132","messageId":"133","endLine":17,"endColumn":54},{"ruleId":"130","severity":1,"message":"136","line":17,"column":56,"nodeType":"132","messageId":"133","endLine":17,"endColumn":60},{"ruleId":"130","severity":1,"message":"154","line":25,"column":6,"nodeType":"132","messageId":"133","endLine":25,"endColumn":12},{"ruleId":"130","severity":1,"message":"155","line":4,"column":16,"nodeType":"132","messageId":"133","endLine":4,"endColumn":22},{"ruleId":"145","severity":1,"message":"146","line":7,"column":5,"nodeType":"147","messageId":"148","endLine":9,"endColumn":6},{"ruleId":"145","severity":1,"message":"146","line":7,"column":5,"nodeType":"147","messageId":"148","endLine":9,"endColumn":6},{"ruleId":"145","severity":1,"message":"146","line":7,"column":5,"nodeType":"147","messageId":"148","endLine":9,"endColumn":6},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'email' is assigned a value but never used.","Identifier","unusedVar","'address' is assigned a value but never used.","'about' is assigned a value but never used.","'role' is assigned a value but never used.","'useState' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'seller' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","'rating' is assigned a value but never used.","'uuidv4' is defined but never used.","no-global-assign","no-unsafe-negation"]